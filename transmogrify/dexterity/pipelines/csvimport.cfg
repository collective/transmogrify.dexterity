[transmogrifier]
pipeline =
    csvreader
    content_type
    title_to_id
    generate_path
    disable_versioning
    constructor
    enable_versioning
    schemaupdater
    transitionsinserter
    workflowupdater
    reindexobject
    logger

[definitions]
csv_file = importcontext:entries.csv
default_portal_type = Document

[csvreader]
blueprint = collective.transmogrifier.sections.csvsource
filename = ${definitions:csv_file}

# Set a default type for content
[content_type]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:${definitions:default_portal_type}
condition = python:'_type' not in item

[title_to_id]
blueprint = plone.app.transmogrifier.urlnormalizer
source-key = title
destination-key = string:_generated_id
locale = string:en
condition = python:'_path' not in item

[generate_path]
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python:(item['_folder'] + '/' if '_folder' in item else '') + item['_generated_id']
condition = python:'_path' not in item

[disable_versioning]
blueprint = plone.app.transmogrifier.versioning.disable

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[enable_versioning]
blueprint = plone.app.transmogrifier.versioning.enable

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[transitionsinserter]
blueprint = collective.transmogrifier.sections.inserter
key = string:_transitions
value = string:publish
condition = python:'_transitions' not in item

[workflowupdater]
blueprint = plone.app.transmogrifier.workflowupdater

[reindexobject]
blueprint = plone.app.transmogrifier.reindexobject

[logger]
blueprint = collective.transmogrifier.sections.logger
name = imported-entries
key = _path
level = INFO
